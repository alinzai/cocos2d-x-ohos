"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkerPoolDelegator=void 0;const worker_pool_factory_js_1=require("./worker-pool-factory.js"),worker_pool_type_js_1=require("../enum/worker-pool-type.js");class WorkerPoolDelegator{constructor(o){this.task=o,this.workerPool=worker_pool_factory_js_1.WorkerPoolFactory.getWorkerPool(worker_pool_type_js_1.WorkerPoolType.LOCAL,{minPoolNum:2})}warmUp(o){if(WorkerPoolDelegator.needWarmUp){const e=this.workerPool.getMinPoolNum();for(let r=0;r<e;r++)this.workerPool.warmUp(o);WorkerPoolDelegator.needWarmUp=!1}}submit(o,e){return this.workerPool.submit(this.task,o,e)}terminate(){return this.workerPool.terminate()}getState(){return this.workerPool.getState()}setState(o){this.workerPool.setState(o)}setRecycleInterval(o){this.workerPool.setRecycleInterval(o)}setMaxIdleTime(o){this.workerPool.setMaxIdleTime(o)}getLog(o){return this.workerPool.getLog(o)}clearLog(o){this.workerPool.clearLog(o)}getMaxPoolNum(){return this.workerPool.getMaxPoolNum()}getMinPoolNum(){return this.workerPool.getMinPoolNum()}}exports.WorkerPoolDelegator=WorkerPoolDelegator,WorkerPoolDelegator.needWarmUp=!1;