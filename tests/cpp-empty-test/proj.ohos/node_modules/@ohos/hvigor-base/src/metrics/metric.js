"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Metric=exports.MetricType=exports.MetricStatus=void 0;const metric_service_js_1=require("./metric-service.js");var MetricStatus,MetricType;!function(t){t.READY="ready",t.STARTED="started",t.BEGINNING="beginning",t.CLOSED="closed"}(MetricStatus=exports.MetricStatus||(exports.MetricStatus={})),function(t){t.BUILD_LINE="build_line",t.DEFAULT="default"}(MetricType=exports.MetricType||(exports.MetricType={}));class Metric{constructor(t,e,s,i){this.type=MetricType.DEFAULT,this.endTime=0,this.status=MetricStatus.READY,this.children=[],this.name=t,this.taskName=e,this.taskPath=s,this.workerId=i,this.startTime=Date.now(),this.status=MetricStatus.BEGINNING}withType(t){return this.type=t,this}setWorkerId(t){this.workerId=t,metric_service_js_1.MetricService.getInstance().addWorkerId(t)}setStatus(t){this.status=t}start(t){this.status!==MetricStatus.CLOSED&&this.status!==MetricStatus.STARTED&&(this.startTime=Date.now(),t&&(this.startTime=t),this.status=MetricStatus.STARTED)}close(t){if(this.status===MetricStatus.CLOSED)return;this.endTime=Date.now(),t&&(this.endTime=t),this.setStatus(MetricStatus.CLOSED);for(const t of this.children)t.close();metric_service_js_1.MetricService.getInstance().submit(this)}createSubMetric(t){const e=new Metric(null!=t?t:this.name,this.taskName,this.taskPath,this.workerId);return this.addChild(e),e}addChild(t){this.children.push(t)}calcTimeDiff(){return this.endTime-this.startTime}getName(){return this.name}getType(){return this.type}getTaskName(){return this.taskName}getTaskPath(){return this.taskPath}getWorkerId(){return this.workerId}getStartTime(){return this.startTime}getEndTime(){return this.endTime}getStatus(){return this.status}getChildren(){return this.children}}exports.Metric=Metric;