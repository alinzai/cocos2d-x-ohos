"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetricService=void 0;const metric_factory_js_1=require("./metric-factory.js"),report_js_1=require("../report/report.js"),report_service_impl_js_1=require("../report/report-service-impl.js"),worker_id_record_js_1=require("./worker-id-record.js"),task_metric_cache_service_js_1=require("../internal/cache/service/task-metric-cache-service.js");class MetricService{constructor(){this.factory=metric_factory_js_1.MetricFactory.getInstance(),this.taskMetricCacheService=task_metric_cache_service_js_1.TaskMetricCacheService.getInstance(),this.workIdRecord=worker_id_record_js_1.WorkerIdRecord.getInstance()}addWorkerId(e){this.workIdRecord.addWorkerId(e)}newMetric(e,r,c,t=-1){return this.factory.newMetric(e,r,c,t)}submit(e){this.taskMetricCacheService.add(e)}queryReport(){const e=this.taskMetricCacheService.getMetrics();return new report_js_1.Report("metrics",e)}clear(){this.taskMetricCacheService.close(),this.workIdRecord.clear()}static getInstance(){return MetricService.instance||(MetricService.instance=new MetricService,report_service_impl_js_1.ReportServiceImpl.getInstance().addListener(MetricService.instance)),MetricService.instance}}exports.MetricService=MetricService;