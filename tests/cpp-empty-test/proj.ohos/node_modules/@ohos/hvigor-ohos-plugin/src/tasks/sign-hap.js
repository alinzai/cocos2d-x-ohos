"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SignHap=void 0;const path_1=__importDefault(require("path")),legacy_package_hap_1=require("./legacy-tasks/legacy-package-hap"),task_names_js_1=require("./common/task-names.js"),package_hap_js_1=require("./package-hap.js"),sign_model_js_1=require("./sign/command-builder-impl/sign-model.js"),base_sign_js_1=require("./base-sign.js");class SignHap extends base_sign_js_1.BaseSign{constructor(e,t){super(e,task_names_js_1.TaskNames.CommonTask.SIGN_HAP,t),this.signModelList=[],this.initSignModelData()}declareInputFiles(){const e=super.declareInputFiles();for(const t of this.signModelList)e.addEntry(t.getInputFilePath(),{isDirectory:!1});return e}declareOutputFiles(){const e=super.declareOutputFiles();for(const t of this.signModelList)t.getOutPutFilePath()&&e.addEntry(t.getOutPutFilePath(),{isDirectory:!1});return e}doTaskAction(e){for(const e of this.signModelList)this.signUtil.sign(e)}initTaskDepends(){this.module.registryDependsOnTask(this,this.isFaMode?new legacy_package_hap_1.LegacyPackageHap(this.targetService):new package_hap_js_1.PackageHap(this.targetService))}initSignModelData(){const e=this.service.getRelatedEntryModules();if(e.length)for(const t of e)this.addSignModel(t);else this.addSignModel("")}addSignModel(e){const t=this.targetData.getModuleTargetOutputFileName(e,!1),s=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),t),a=path_1.default.resolve(this.pathInfo.getModuleBuildOutputPath(),this.targetData.getModuleTargetOutputFileName(e,!0));this.signModelList.push(new sign_model_js_1.SignModel(this.signType,s,a))}}exports.SignHap=SignHap;