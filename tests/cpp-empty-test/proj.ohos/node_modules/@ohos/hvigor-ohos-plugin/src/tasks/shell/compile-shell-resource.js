"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompileShellResource=void 0;const file_util_js_1=require("../../utils/file-util.js"),build_directory_const_js_1=require("../../const/build-directory-const.js"),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),project_file_reader_js_1=require("../../utils/project-file-reader.js"),runtime_type_enum_js_1=require("../../enum/runtime-type-enum.js"),task_names_js_1=require("../common/task-names.js"),legacy_process_profile_js_1=require("../legacy-tasks/legacy-process-profile.js"),restool_command_builder_js_1=require("../../builder/restool-command-builder.js"),abstract_compile_resource_js_1=require("../abstract/abstract-compile-resource.js"),file_set_js_1=require("@ohos/hvigor-base/src/internal/snapshot/util/file-set.js");var ShellTask=task_names_js_1.TaskNames.ShellTask;const path_1=__importDefault(require("path"));class CompileShellResource extends abstract_compile_resource_js_1.AbstractCompileResource{constructor(e){super(e,ShellTask.COMPILE_SHELL_RESOURCES),this._log=ohos_logger_js_1.OhosLogger.getLogger(CompileShellResource.name),this.doNotTrackState("This task should not incremental.")}declareInputFiles(){return new file_set_js_1.FileSet}declareOutputFiles(){return new file_set_js_1.FileSet}initTaskDepends(){this.module.registryDependsOnTask(this,new legacy_process_profile_js_1.LegacyProcessProfile(this.targetService))}taskShouldDo(e){return e.getTargetStatus().is(runtime_type_enum_js_1.RuntimeTypeEnum.HARMONY_OS)}beforeTask(e){file_util_js_1.FileUtil.checkDirWithoutDelete(this.getTaskTempDir(e));const t=e.getPathInfo();file_util_js_1.FileUtil.checkDirWithoutDelete(t.getShellSrcMain())}getResToolFile(){return this.sdkInfo.getHosResTool()}doTaskAction(e){const t=e.getPathInfo(),s=t.getIntermediatesProcessLegacyProfile(),r=this.getRestoolCommandBuilder();r.addJsonFile(s).addModulePackName(project_file_reader_js_1.ProjectFileReader.getJson5Obj(s).app.bundleName).addOutputDir(this.getTaskTempDir(e)).addResTable(path_1.default.resolve(this.getTaskTempDir(e),build_directory_const_js_1.BuildArtifactConst.RESOURCE_TABLE_JAVA)).addOutputBak(t.getShellSrcMain()),this.executeCommandSync(r.build(),this._log)}getRestoolCommandBuilder(){const e=this.initCommandTargetResource();e.addModules(this.getRestoolModules().join(",")).forceDelete();return this.service.getDependencyRootPaths().reverse().forEach((t=>{e.addInputDir(path_1.default.resolve(t,"src","main"))})),e}initCommandTargetResource(){const e=new restool_command_builder_js_1.RestoolCommandBuilder(this.getResToolFile());return e.addInputDir(this.moduleModel.getSourceSetByTargetName(this.targetName).getSourceSetRoot()),e}getRestoolModules(){return[...new Set([this.moduleModel.getName(),this.moduleModel.getSourceSetByTargetName(this.targetData.getTargetName()).getLegacyModuleTargetRes().getConfigJsonOpt().module.distro.moduleName,...this.service.getProjectModel().getSubProjects().keys()])]}}exports.CompileShellResource=CompileShellResource;