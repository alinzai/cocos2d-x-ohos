"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,o){void 0===o&&(o=r);var s=Object.getOwnPropertyDescriptor(t,r);s&&!("get"in s?!t.__esModule:s.writable||s.configurable)||(s={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,o,s)}:function(e,t,r,o){void 0===o&&(o=r),e[o]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GenerateLoaderJson=void 0;const path_1=__importDefault(require("path")),fse=__importStar(require("fs-extra")),build_directory_const_js_1=require("../const/build-directory-const.js"),common_const_js_1=require("../const/common-const.js"),file_set_js_1=require("@ohos/hvigor-base/src/internal/snapshot/util/file-set.js"),abstract_generate_loader_json_js_1=require("./abstract-generate-loader-json.js"),pre_build_js_1=require("./pre-build.js"),task_names_js_1=require("./common/task-names.js");class GenerateLoaderJson extends abstract_generate_loader_json_js_1.AbstractGenerateLoaderJson{constructor(e){super(e,task_names_js_1.TaskNames.Task.GENERATE_LOADER_JSON),this.compileMode=this.moduleModel.getCompileMode(),this.aceLoaderJson=path_1.default.resolve(e.getTargetData().getPathInfo().getIntermediatesLoaderPath(),build_directory_const_js_1.BuildArtifactConst.LOADER_JSON),this.nodeModulesPath=path_1.default.resolve(e.getTargetData().getPathInfo().getInterMediatesLoaderOutPath(),common_const_js_1.CommonNodeConst.NODE_MODULES)}declareInputs(){return super.declareInputs().set("compileMode",this.compileMode.toString()).set("nodeModulesPath",this.nodeModulesPath).set("targetConfig",JSON.stringify(this.targetData.getTargetOpt()))}declareOutputFiles(){return(new file_set_js_1.FileSet).addEntry(this.aceLoaderJson,{isDirectory:!1})}initTaskDepends(){this.module.registryDependsOnTask(this,new pre_build_js_1.PreBuild(this.targetService))}doTaskAction(e){fse.outputJSONSync(this.aceLoaderJson,{workers:this.workerConfig,modulePathMap:this.modulePathMap,compileMode:this.compileMode,projectRootPath:this.projectRootPath,nodeModulesPath:this.nodeModulesPath})}}exports.GenerateLoaderJson=GenerateLoaderJson;