"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GenerateCodemodel=void 0;const path_1=__importDefault(require("path")),fs_extra_1=__importDefault(require("fs-extra")),ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),project_file_reader_1=require("../../utils/project-file-reader");class GenerateCodemodel{constructor(e){this._log=ohos_logger_js_1.OhosLogger.getLogger(GenerateCodemodel.name),this.reply=path_1.default.resolve(e,".cmake","api","v1","reply"),this._codemodel=this.generateCodemodel()}getCodemodel(){return this._codemodel}generateCodemodel(){const e=this.readIndex(),r=this.readCodemodel(e.reply);return this.readTarget(r),r}readCodemodel(e){if(!e||!e["codemodel-v2"])return void this._log.warn("Failed to generate CMake code mode. The native code will skip compiling.");const r=e["codemodel-v2"],t=null==r?void 0:r.jsonFile;if(!t)return;const o=path_1.default.resolve(this.reply,t);return project_file_reader_1.ProjectFileReader.getJson5Obj(o)}readIndex(){const e=fs_extra_1.default.readdirSync(this.reply).find((e=>e.startsWith("index-")));return e||this._log._buildError("Cmake codemodel generate failed.")._printErrorAndExit(),project_file_reader_1.ProjectFileReader.getJson5Obj(path_1.default.resolve(this.reply,e))}readTarget(e){var r;null===(r=null==e?void 0:e.configurations)||void 0===r||r.forEach((e=>{var r;if(e.targets)for(let t=0;t<(null===(r=e.targets)||void 0===r?void 0:r.length);t++){const r=e.targets[t].jsonFile;if(!r)return;e.targets[t]=project_file_reader_1.ProjectFileReader.getJson5Obj(path_1.default.resolve(this.reply,r))}}))}}exports.GenerateCodemodel=GenerateCodemodel;