"use strict";function getIntersection(e,t){return e.filter((function(e){return t.indexOf(e)>-1}))}function getElementFromArr(e,t){if(void 0!==e)for(const r of e)if(r.name===t)return r}function findDuplicateElement(e){const t=new Set,r=new Set;return e.forEach((e=>{r.has(e)?t.add(e):r.add(e)})),[...t]}function checkArrayIsSame(e,t){if(e.length===t.length){for(let r=0;r<e.length;r++)if(e[r]!==t[r])return!1;return!0}return!1}function checkArrayElementIsSame(e,t){return e.length===t.length&&JSON.stringify(e.sort())===JSON.stringify(t.sort())}Object.defineProperty(exports,"__esModule",{value:!0}),exports.checkArrayElementIsSame=exports.checkArrayIsSame=exports.findDuplicateElement=exports.getElementFromArr=exports.getIntersection=void 0,exports.getIntersection=getIntersection,exports.getElementFromArr=getElementFromArr,exports.findDuplicateElement=findDuplicateElement,exports.checkArrayIsSame=checkArrayIsSame,exports.checkArrayElementIsSame=checkArrayElementIsSame;