"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompileJavaWithJavac=void 0;const ohos_logger_js_1=require("../../utils/log/ohos-logger.js"),process_utils_js_1=require("../../utils/process-utils.js"),java_compile_command_builder_js_1=require("../../builder/java-compile-command-builder.js"),path_1=__importDefault(require("path")),fs_extra_1=__importDefault(require("fs-extra")),runtime_type_enum_js_1=require("../../enum/runtime-type-enum.js"),ohos_shell_hap_task_js_1=require("./ohos-shell-hap-task.js"),task_names_js_1=require("../common/task-names.js"),generate_java_files_js_1=require("./generate-java-files.js");var ShellTask=task_names_js_1.TaskNames.ShellTask;const lodash_1=require("lodash");class CompileJavaWithJavac extends ohos_shell_hap_task_js_1.OhosShellHapTask{constructor(e){super(e,ShellTask.COMPILE_SHELL_JAVA_WITH_JAVAC),this._log=ohos_logger_js_1.OhosLogger.getLogger(CompileJavaWithJavac.name)}initTaskDepends(){this.module.registryDependsOnTask(this,new generate_java_files_js_1.GenerateJavaFiles(this.targetService))}taskShouldDo(e){return e.getTargetStatus().is(runtime_type_enum_js_1.RuntimeTypeEnum.HARMONY_OS)}beforeTask(e){fs_extra_1.default.emptyDirSync(e.getPathInfo().getIntermediatesClassDir()),fs_extra_1.default.emptyDirSync(e.getPathInfo().getIntermediatesShellClassDir())}doTaskAction(e){const s=e.getPathInfo();this.compileJavaFiles(s.getIntermediatesShellJavaDir(),s.getIntermediatesShellClassDir(),[this.sdkInfo.getAbilityShellJar(),this.sdkInfo.getAceJar(),this.sdkInfo.getAJar()]),this.compileJavaFiles(s.getIntermediatesJavaDir(),s.getIntermediatesClassDir(),[this.sdkInfo.getOhosJar()])}compileJavaFiles(e,s,t){const a=(new java_compile_command_builder_js_1.JavaCompileCommandBuilder).addEncoding("UTF-8").addTarget("8").addSource("8").addIndexFile(path_1.default.resolve(e,"javaList")).addDest(s).addClasspath(t.join(path_1.default.delimiter));this._log.debug(a.build());const i={commandLine:a.build(),commandOptions:{stderr:"ignore",stdout:"ignore"}};(new process_utils_js_1.ProcessUtils).submitSyncExecutionWithoutReturn(this.getWorkerPool(),i,lodash_1.noop,[],[0,1])}}exports.CompileJavaWithJavac=CompileJavaWithJavac;