"use strict";var __importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.BuildNativeWithNinja=void 0;const path_1=__importDefault(require("path")),fs_extra_1=__importDefault(require("fs-extra")),native_command_builder_js_1=require("../builder/native-command-builder.js"),cpu_abi_enum_js_1=require("../enum/cpu-abi-enum.js"),ohos_logger_js_1=require("../utils/log/ohos-logger.js"),build_native_with_cmake_js_1=require("./build-native-with-cmake.js"),task_names_js_1=require("./common/task-names.js"),generate_native_library_js_1=require("../model/cxx/generate-native-library.js"),generate_codemodel_js_1=require("../model/cxx/generate-codemodel.js");var Task=task_names_js_1.TaskNames.Task;const cmake_util_js_1=require("../utils/cmake-util.js"),abstract_build_native_js_1=require("./abstract-build-native.js");class BuildNativeWithNinja extends abstract_build_native_js_1.AbstractBuildNative{constructor(e){super(e,Task.BUILD_NATIVE_WITH_NINJA),this._log=ohos_logger_js_1.OhosLogger.getLogger(BuildNativeWithNinja.name)}initTaskDepends(){this.module.registryDependsOnTask(this,new build_native_with_cmake_js_1.BuildNativeWithCmake(this.targetService))}buildCommand(e,t,a,i){const s=t.getPathInfo(),r=path_1.default.resolve(s.getNinjaWorkDir(),e),o=new native_command_builder_js_1.NativeCommandBuilder(this.sdkInfo.getNativeNinjaTool()).changeToDir(r).build();this._log._printDebugCommand("Ninja",o),this.executeCommand(o,a,i,[0,1])}taskShouldDo(e){return cmake_util_js_1.CmakeUtil.nativeTaskCondition(this.moduleModel,e,this._nativeOption)}beforeTask(e){fs_extra_1.default.emptyDirSync(this.pathInfo.getIntermediatesCppOutPut())}doTaskAction(e){var t;const a=e.getPathInfo(),i=path_1.default.resolve(a.getIntermediatesCppOutPut());cmake_util_js_1.CmakeUtil.checkAbiFilters(null===(t=this._nativeOption)||void 0===t?void 0:t.abiFilters).forEach((t=>{const s=path_1.default.resolve(i,t),r=path_1.default.resolve(a.getNinjaWorkDir(),t),o=new generate_codemodel_js_1.GenerateCodemodel(r).getCodemodel();this.buildCommand(t,e,(()=>{if(void 0!==o){const a=this.generateNativeLibraries(o,r,e.getTargetName(),t);this.syncOutput(a,s,r)}}),[]),this.syncStl(t,s,a)}))}generateNativeLibraries(e,t,a,i){var s;const r=new Map;return null===(s=e.configurations)||void 0===s||s.forEach((e=>{var s;null===(s=e.targets)||void 0===s||s.forEach((e=>{const s=this.sdkInfo.getCmakeTool(),o=new generate_native_library_js_1.GenerateNativeLibrary(s,t,i,e,a).getLibrary();e.name&&r.set(e.name,o)}))})),r}syncOutput(e,t,a){e.forEach(((e,i)=>{var s,r;null===(s=e.getOutputs())||void 0===s||s.forEach((s=>{const r=path_1.default.isAbsolute(s)?path_1.default.resolve(s):path_1.default.resolve(a,s),o=e.getNameOnDisk();if(!o)return;const l=path_1.default.resolve(t,o);r!==l&&(this._log.debug(`External build set its own library output location for ${i}, which will be hard linked or copy to the expected location.`),fs_extra_1.default.copySync(r,l,{recursive:!0}))})),null===(r=e.getRuntimeFiles())||void 0===r||r.forEach((i=>{i=path_1.default.isAbsolute(i)?path_1.default.resolve(i):path_1.default.resolve(a,e.getBuild(),i);const s=path_1.default.parse(i),r=path_1.default.resolve(t,s.base);i!==r&&fs_extra_1.default.copySync(i,r,{recursive:!0})}))}))}syncStl(e,t,a){const i=this.getArguments(),s=i.some((e=>"-DOHOS_STL=c++_static"===e))||i.some((e=>"-DOHOS_STL=none"===e)),r=path_1.default.resolve(t,"libc++.so"),o=path_1.default.resolve(t,"libc++_shared.so"),l=path_1.default.resolve(a.getModuleBuildIntermediates(),"libs",e);if(s)return fs_extra_1.default.removeSync(r),fs_extra_1.default.removeSync(o),void fs_extra_1.default.removeSync(l);const n=path_1.default.resolve(this.sdkInfo.getSdkNativeDir(),"llvm","lib",cpu_abi_enum_js_1.CpuAbiEnum.getCpuType(e),"c++"),_=path_1.default.resolve(n,"libc++_shared.so");fs_extra_1.default.existsSync(_)&&fs_extra_1.default.copySync(_,o)}getArguments(){var e;const t=null===(e=this._nativeOption)||void 0===e?void 0:e.arguments;return t&&""!==t?t.split(" "):[]}}exports.BuildNativeWithNinja=BuildNativeWithNinja;