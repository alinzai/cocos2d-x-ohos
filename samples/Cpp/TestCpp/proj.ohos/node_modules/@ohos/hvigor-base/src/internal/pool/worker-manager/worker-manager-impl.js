"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,t,r,s){void 0===s&&(s=r);var o=Object.getOwnPropertyDescriptor(t,r);o&&!("get"in o?!t.__esModule:o.writable||o.configurable)||(o={enumerable:!0,get:function(){return t[r]}}),Object.defineProperty(e,s,o)}:function(e,t,r,s){void 0===s&&(s=r),e[s]=t[r]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)"default"!==r&&Object.prototype.hasOwnProperty.call(e,r)&&__createBinding(t,e,r);return __setModuleDefault(t,e),t},__awaiter=this&&this.__awaiter||function(e,t,r,s){return new(r||(r=Promise))((function(o,i){function a(e){try{l(s.next(e))}catch(e){i(e)}}function n(e){try{l(s.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?o(e.value):(t=e.value,t instanceof r?t:new r((function(e){e(t)}))).then(a,n)}l((s=s.apply(e,t||[])).next())}))},__importDefault=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorkerManagerImpl=void 0;const constant_js_1=require("../constant/constant.js"),worker_js_1=require("./worker.js"),worker_threads_1=require("worker_threads"),noop_js_1=require("../../../util/noop.js"),worker_state_js_1=require("../enum/worker-state.js"),hvigor_log_js_1=require("../../../log/hvigor-log.js"),tcb_store_js_1=require("../store/tcb-store.js"),task_state_js_1=require("../enum/task-state.js"),path_1=__importDefault(require("path")),log_type_js_1=require("../enum/log-type.js"),iconv=__importStar(require("iconv-lite")),util_js_1=require("../../../util/util.js");class WorkerManagerImpl{constructor(e,t,r){this._log=hvigor_log_js_1.HvigorLogger.getLogger(WorkerManagerImpl.name),this.maxPoolNum=Math.floor(e.maxPoolNum&&e.maxPoolNum>=1?e.maxPoolNum:constant_js_1.PoolConstant.MAX_POOL_NUM),this.minPoolNum=Math.floor(e.minPoolNum&&e.minPoolNum>=0?Math.max(e.minPoolNum,constant_js_1.PoolConstant.MIN_POOL_NUM):constant_js_1.PoolConstant.MIN_POOL_NUM),this.minPoolNum=Math.min(this.minPoolNum,this.maxPoolNum),this.recycleInterval=Math.floor(e.recycleInterval&&e.recycleInterval>0?e.recycleInterval:constant_js_1.PoolConstant.DEFAULT_RECYCLE_INTERVAL),this.maxIdleTime=Math.floor(e.maxIdleTime&&e.maxIdleTime>0?e.maxIdleTime:constant_js_1.PoolConstant.DEFAULT_MAX_IDLE_TIME),this.idleWorkers=new Map,this.busyWorkers=new Map,this.deadWorkers=new Set,this.timer=setInterval((()=>{this.recycle()}),this.recycleInterval),this.callbacks=new Map,this.eventMap=new Map([[constant_js_1.PoolConstant.WORK_DONE,task_state_js_1.TaskState.END],[constant_js_1.PoolConstant.WORK_ERROR,task_state_js_1.TaskState.ERROR]]),this.dispatch=t,this.addLog=r,this.nextId=0;for(let e=0;e<this.minPoolNum;e++)this.createWorker()}getMaxPoolNum(){return this.maxPoolNum}getMinPoolNum(){return this.minPoolNum}clear(e){clearInterval(this.timer),this.clearWorkers(e,this.idleWorkers),this.clearWorkers(e,this.busyWorkers)}clearWorkers(e,t){t.forEach(((r,s)=>{t.delete(s),r.terminate((()=>{this.idleWorkers.size||this.busyWorkers.size||(this.deadWorkers.clear(),e())}))}))}createWorker(e){if(this.idleWorkers.size+this.busyWorkers.size>=this.maxPoolNum)return!1;const t=new worker_threads_1.Worker(path_1.default.resolve(__dirname,constant_js_1.PoolConstant.WORKER_ACTION_PATH),{workerData:this._log.getLevel().levelStr,stdout:!0,stderr:!0}),r=this.getAllocatedId(e);if(r<0)return!1;const s=new worker_js_1.HWorker(t,r);return this.idleWorkers.set(s.getId(),s),t.on("exit",(()=>{this.idleWorkers.has(r)?this.idleWorkers.delete(r):this.busyWorkers.has(r)&&this.busyWorkers.delete(r),this.deadWorkers.add(r)})),t.on("error",(e=>{const t=s.getCurWorkId();s.setLastBusyTime(Date.now()),s.cancelCurWorkId(),tcb_store_js_1.TcbStore.getTCB(t).setEndTime(Date.now()),tcb_store_js_1.TcbStore.getTCB(t).setState(this.eventMap.get(constant_js_1.PoolConstant.WORK_ERROR)),this.busyWorkers.delete(s.getId()),s.setState(worker_state_js_1.WorkerState.IDLE),this.idleWorkers.set(s.getId(),s),this.notifyError(t,e)})),t.on("message",(e=>__awaiter(this,void 0,void 0,(function*(){if(this.callbacks.has(e.id)&&e.event===constant_js_1.PoolConstant.WORK_DONE){const t=this.callbacks.get(e.id);tcb_store_js_1.TcbStore.getTCB(e.id).useReturnVal()?yield t.fn(e.returnVal):yield t.fn(...t.input)}s.setLastBusyTime(Date.now()),s.cancelCurWorkId(),tcb_store_js_1.TcbStore.getTCB(e.id).setEndTime(Date.now()),tcb_store_js_1.TcbStore.getTCB(e.id).setState(this.eventMap.get(e.event)),this.busyWorkers.delete(s.getId()),s.setState(worker_state_js_1.WorkerState.IDLE),this.idleWorkers.set(s.getId(),s),this.notify(e.id,e.event),this.dispatch(this,s.getId())})))),t.stdout.on("data",this.getDataHandler(s)(process.stdout)),t.stderr.on("data",this.getDataHandler(s)(process.stderr)),!0}getAllocatedId(e){let t=-1;if(void 0!==e&&(this.isBusyWorker(e)||this.isIdleWorker(e)))return t;if(void 0!==e&&this.isRecycledWorker(e))t=e,this.deadWorkers.delete(t);else if(void 0===e||this.isRecycledWorker(e))this.deadWorkers.size?(t=this.deadWorkers.values().next().value,this.deadWorkers.delete(t)):t=this.nextId++;else{if(e!==this.nextId)return t;t=this.nextId++}return t}notify(e,t){const r=tcb_store_js_1.TcbStore.getTCB(e);r.isWarmUp()||r.emit(t,e)}notifyError(e,t){const r=tcb_store_js_1.TcbStore.getTCB(e);r.isWarmUp()||r.emit(constant_js_1.PoolConstant.WORK_ERROR,{id:e,error:t})}getDataHandler(e){return t=>r=>{if(!e.getCurWorkId())return void t.write(r);const s=iconv.decode(r,constant_js_1.PoolConstant.ENCODING),o={type:log_type_js_1.LogType.WORK,time:(0,util_js_1.isHvigorLogWithTime)(s)?s.substring(0,constant_js_1.PoolConstant.TIME_PREFIX_LENGTH):constant_js_1.PoolConstant.UNKNOWN_LOG_TIME,workerId:e.getId(),content:s,taskPath:tcb_store_js_1.TcbStore.getTCB(e.getCurWorkId()).getTaskPath(),taskName:tcb_store_js_1.TcbStore.getTCB(e.getCurWorkId()).getTaskName(),taskCompletePath:tcb_store_js_1.TcbStore.getTCB(e.getCurWorkId()).getTaskCompletePath()};this.addLog(o),t.write(r)}}doWork(e,t,r,s){if(this.idleWorkers.has(s)&&this.idleWorkers.get(s).doWork(e)){const o=this.idleWorkers.get(s);return this.idleWorkers.delete(s),this.busyWorkers.set(s,o),tcb_store_js_1.TcbStore.getTCB(e.getId()).setState(task_state_js_1.TaskState.RUNNING),tcb_store_js_1.TcbStore.getTCB(e.getId()).setStartTime(Date.now()),tcb_store_js_1.TcbStore.getTCB(e.getId()).setWorkerId(s),this.callbacks.set(e.getId(),{fn:t,input:r}),!0}return!1}getAvailableWorkers(){return Array.from(this.idleWorkers.keys())}hasAvailableWorkers(){return this.idleWorkers.size>0}recycle(){this.idleWorkers.forEach(((e,t)=>{this.idleWorkers.size+this.busyWorkers.size>this.minPoolNum&&Date.now()-e.getLastBusyTime()>this.maxIdleTime&&(this.idleWorkers.delete(t),this.deadWorkers.add(t),e.terminate(noop_js_1.noop))}))}setMaxIdleTime(e){e>0&&(this.maxIdleTime=e)}setRecycleInterval(e){e>0&&(this.recycleInterval=e,clearInterval(this.timer),this.timer=setInterval((()=>{this.recycle()}),this.recycleInterval))}isBusyWorker(e){return this.busyWorkers.has(e)}isIdleWorker(e){return this.idleWorkers.has(e)}isRecycledWorker(e){return this.deadWorkers.has(e)}}exports.WorkerManagerImpl=WorkerManagerImpl;